name: Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
      with: { lfs: 'true' }

    - uses: actions/setup-go@v5
      with: { go-version: stable }

    - name: Format
      run: gofmt -s -w . && git diff --exit-code
      if: matrix.os != 'windows-latest'

    - name: Tidy
      run: go mod tidy && git diff --exit-code

    - name: Download
      run: go mod download

    - name: Verify
      run: go mod verify

    - name: Vet
      run: go vet ./...

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

    - name: Test BSD locks
      run: go test -v -tags sqlite3_flock ./...
      if: matrix.os == 'macos-latest'

    - name: Test no locks
      run: go test -v -tags sqlite3_nosys ./tests -run TestDB_nolock

    - name: Test GORM
      run: gormlite/test.sh

    - uses: ncruces/go-coverage-report@v0
      with:
        chart: true
        amend: true
      if: |
        github.event_name == 'push' &&
        matrix.os == 'ubuntu-latest'

  test-bsd:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4
      with: { lfs: 'true' }

    - uses: actions/setup-go@v5
      with: { go-version: stable }

    - name: Build
      run: .github/workflows/bsd.sh

    - name: Test
      uses: cross-platform-actions/action@v0.23.0
      with:
        operating_system: freebsd
        version: '14.0'
        shell: bash
        run: source test.sh
        sync_files: runner-to-vm

  test-m1:
    runs-on: macos-14
    needs: test

    steps:
    - uses: actions/checkout@v4
      with: { lfs: 'true' }

    - uses: actions/setup-go@v5
      with: { go-version: stable }

    - name: Test
      run: go test -v ./...

  test-386:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4
      with: { lfs: 'true' }

    - uses: actions/setup-go@v5
      with: { go-version: stable }

    - name: Test
      run: GOARCH=386 go test -v -short ./...

  test-arm:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4
      with: { lfs: 'true' }

    - uses: actions/setup-go@v5
      with: { go-version: stable }

    - uses: docker/setup-qemu-action@v3

    - name: Test
      run: GOARCH=arm64 go test -v -short ./...